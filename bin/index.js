function validateEach(e){try{conf[e].actual=findOutVersion(e),conf[e].isValid=semver.satisfies(conf[e].actual,conf[e].expected)}catch(c){conf[e].actual="",conf[e].isValid=!1}}function findOutVersion(e){return String(childProcess.execSync(e+" --version",{cwd:"./node_modules/.bin/"})).replace(/[^0-9.]/gm,"")}var childProcess=require("child_process"),col=require("colors/safe"),semver=require("semver"),options=["node","npm","yarn","git","karma","gulp","grunt","eslint","tslint","nvm","n"],conf={},isValid=!0;exports.validate=module.exports.validate=function(e){return options.filter(function(c){return e[c]&&!0!==e[c]}).forEach(function(c){conf[c]={expected:e[c],actual:"",isValid:!1},validateEach(c),conf[c].isValid?console.log(col.green("    "+c+": "+conf[c].actual)):(isValid=!1,console.log(col.red("    "+c+": "+conf[c].actual+" but expected is "+conf[c].expected)))}),isValid},exports.checkAll=module.exports.checkAll=function(){var e={};return options.forEach(function(c){try{e[c]=findOutVersion(c),e[c]&&console.log(col.green("    "+c+": "+e[c]))}catch(o){delete e[c]}}),e};